openapi: 3.0.0
info:
  version: "1.0.0"
  title: ''
  description: ''
tags:
  - name: method
    description: response returned from orchestration
paths:
  /{integrator}/payu/methods:
    post:
      summary: |
        Provides the instructions of all payment methods the service can handle for the provided payment
      operationId: getMethods
      parameters: 
       - $ref: 'https://api.swaggerhub.com/domains/examplegroup/example/0.0.1#/components/parameters/integrator'
      requestBody:
        $ref: 'https://api.swaggerhub.com/domains/examplegroup/example/0.0.1#/components/requestBodies/GetMethodsRequestBody'
      responses:
        '200':
          description: Instructions for handling the payment method
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/examplegroup/example/0.0.1#/components/responses/GetMethodsResponse'
        '400':
          description: Invalid payload provided
  /{integrator}/{method}/{psp}/initialize/{paymentId}:
    get:
      summary: Provides the action to initialize this method
      operationId: initialize
      parameters:
        - $ref: '#/components/parameters/integrator'
        - $ref: '#/components/parameters/method'
        - $ref: '#/components/parameters/psp'
        - $ref: '#/components/parameters/paymentId'
      security:
        - authentication: []
      responses:
        '200':
          description: |
            Responds with the instructions on how to inizialize the
            method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitializeResponse'
        '400':
          description: |
            If the initialization is not possible due to an active
            attempt
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Invalid or unknown payment id provided
        '502':
          description: An internal upstream service replied with an invalid or unexpected response.
        '504':
          description: An internal upstream service did not respond or did not responded timely.
          
  /{integrator}/{method}/{psp}/execute/{paymentId}/{attemptId}:
    post:
      summary: Provides the action to execute this method
      operationId: execute
      parameters:
        - $ref: '#/components/parameters/integrator'
        - $ref: '#/components/parameters/method'
        - $ref: '#/components/parameters/psp'
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/attemptId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      security:
        - authentication: []
      responses:
        '200':
          description: |
            Responds with the instructions on how to execute the
            method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '400':
          description: |
            If the execution is not possible due to an active
            attempt
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Invalid or unknown payment id provided
        '502':
          description: An internal upstream service replied with an invalid or unexpected response.
        '504':
          description: An internal upstream service did not respond or did not responded timely.

  /{integrator}/{method}/{psp}/redirect/{paymentId}/{attemptId}:
    get:
      summary: Provides an endpoint where to redirect the user
      operationId: redirect
      parameters:
        - $ref: '#/components/parameters/integrator'
        - $ref: '#/components/parameters/method'
        - $ref: '#/components/parameters/psp'
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/attemptId'
        - $ref: '#/components/parameters/payu-payment-id'
        - $ref: '#/components/parameters/payu-authorization-id'
        - $ref: '#/components/parameters/payu-status'
      responses:
        '302':
          description: Redirects to the proper page
          headers:
            Location:
              description: Url where the user is going to be redirected
              schema:
                type: string
                example: https://www.example.com
        '404':
          description: Invalid or unknown payment id provided

  /{integrator}/{psp}/notifications:
    post:
      summary: |
        Endpoint where notifications are received. Refer to the PaymentsOS
        documentation for more information
      operationId: notifications
      parameters:
        - $ref: '#/components/parameters/integrator'
        - $ref: '#/components/parameters/psp'
        - $ref: '#/components/parameters/signature'
        - $ref: '#/components/parameters/event-type'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/x-payments-os-env'
        - $ref: '#/components/parameters/x-zooz-request-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        '204':
          description: Everything is okay          
  /health:
    get:
      summary: Health Check endpoint
      operationId: healthCheck
      responses:
        '200':
          description: Service is OK
        '503':
          description: Service is KO

components:
  parameters:
    # Path Parameters
    integrator:
      name: integrator
      in: path
      required: true
      schema:
        type: string
        enum: [example_co,example_pe,example_ar]
      description: The integrator identifier
    method:
      name: method
      in: path
      required: true
      schema:
        type: string
        enum: [bank_transfer]
      description: The method identifier
    psp:
      name: psp
      in: path
      required: true
      schema:
        type: string
        enum: [payu]
      description: The payment service provider identifier
    paymentId:
      name: paymentId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
      description: The payment identifier
    attemptId:
      name: attemptId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
      description: The attempt identifier
    # Query Parameters
    payu-payment-id:
      name: payment_id
      in: query
      required: true
      schema:
        type: string
      description: The PayU payment identifier
    payu-authorization-id:
      name: authorization_id
      in: query
      required: true
      schema:
        type: string
      description: The PayU authorization identifier
    payu-status:
      name: status
      in: query
      required: true
      schema:
        type: string
        enum: [Pending, Succeed, Failed]
      description: The PayU status
    # Headers
    signature:
      name: signature
      in: header
      required: true
      schema:
        type: string
      description: HMAC-SHA-256 of the notification
    event-type:
      name: event-type
      in: header
      required: true
      schema:
        type: string
      description: The type of resource that triggered the event
    version:
      name: version
      in: header
      required: true
      schema:
        type: string
      description: Version of the Webhooks configuration
    x-payments-os-env:
      name: x-payments-os-env
      in: header
      required: true
      schema:
        type: string
        enum: [live, test]
      description: PaymentsOS environment header, 'live' or 'test'
    x-zooz-request-id:
      name: x-zooz-request-id
      in: header
      required: true
      schema:
        type: string
      description: |
        The ID of the original request that triggered the webhook event.

  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid

  securitySchemes:
    authentication:
      type: http
      description: Token for validate the request
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Notification:
      type: object
      properties:
        id:
          type: string
          description: |
            The Webhook id. This id is unique per Webhook and can be
            used to validate that the request is unique
            (idempotency validation)
        created:
          type: string
          description: The date and time the event was created
        payment_id:
          type: string
          description: The payment id
        account_id:
          type: string
          description: The merchant account related to the event
        app_id:
          type: string
          description: The Business Unit related to the event
        data:
          type: object
          description: The full transaction resource that initiated the event
          additionalProperties: true
  
    Payment:
      type: object
      properties:
        id:
          type: string
          description: identifier of the payment
          example: 30D4AE59-83E8-4F25-BC5D-0BC4C3E0709D
        integrator:
          type: string
          description: integrator associate to the payment
          example: TEST_INTEGRATOR
        amount:
          $ref: '#/components/schemas/Amount'
        customer:
          $ref: '#/components/schemas/Customer'
        redirectUrls:
          $ref: '#/components/schemas/RedirectUrls'
        experience:
          $ref: '#/components/schemas/Experience'
        order:
          $ref: '#/components/schemas/Order'
        flavors:
          type: array
          description: Flavors enabled for this payment
          items:
            type: string
            enum: [AGENT, WALLET]
      required:
        - id
        - integrator
        - amount
        - customer
        - redirectUrls
        - experience
        - order
        
    PaymentRequest:
      type: object
      properties:
        bankCode: 
          type: string
          description: bank Transfer Financial Institution Code 
          example: "1022"
        name: 
          type: string
          description: Account owner name could be any combination of letters and spaces 
          example: "John Doe"
          minLength: 1
          maxLength: 50
        identificationType:
          type: string
          description: national Identify Type 
          example: "CC"
        identificationNumber:
          type: string
          description: national Identify Number, Identification number could be any combination of numbers. 
          example: "998877665544"
          minLength: 1
          maxLength: 25
        phoneNumber:
          type: string
          description: account owner phone number, Phone number could be any combination of numbers.
          example: "23645963"
          minLength: 1
          maxLength: 20
        userType:
          type: string
          description: user type 
          example: "N"
      required:
        - financialInstiutionCode
        - accountOwnerName
        - identificationType
        - identificationNumber
        - phoneNumber
        - userType
          
    Amount:
      type: object
      properties:
        grossValue:
          type: number
          format: float
          description: Gross value of this amount
          example: 400.10
          minimum: 0
          exclusiveMinimum: true
        smsSurcharge:
          type: number
          format: float
          nullable: true
          description: Surcharge to apply if it is an sms payment
          example: 10.0
        currency:
          type: string
          description: Currency used for this payment (ISO 4217)
          example: USD
          minLength: 3
          maxLength: 3
      required:
        - grossValue
        - currency

    Customer:
      type: object
      properties:
        userId:
          type: string
          description: Integrator identifier of the customer
          example: 12345_panamera
          minLength: 1
        firstName:
          type: string
          nullable: true
          description: Name of the customer
          example: Mario
        lastName:
          type: string
          nullable: true
          description: Surname of the customer
          example: Rossi
        emailAddress:
          type: string
          nullable: true
          description: Email of the customer
          example: mario@rossi.com
        phoneNumber:
          type: string
          nullable: true
          description: Phone number of the customer
          example: +00123456789987
      required:
        - userId

    RedirectUrls:
      type: object
      properties:
        experienceCompleted:
          type: string
          format: uri
          description: url for when the experience is completed
          example: https://www.example.com/completed
          minLength: 1
        experienceCancelled:
          type: string
          format: uri
          description: url for when the experience is cancelled
          example: https://www.example.com/cancelled
          minLength: 1
        customerActionUrl:
          type: string
          nullable: true
          format: uri
          description: url for custom user actions
          example: https://www.example.com/customAction
      required:
        - experienceCompleted
        - experienceCancelled

    Experience:
      type: object
      properties:
        platform:
          type: string
          description: platform used by the user
          example: ANDROID
          minLength: 1
        locale:
          type: string
          pattern: '^[a-zA-Z]{2}_[a-zA-Z]{2}$'
          description: current locale of the user
          example: en_PK

      required:
        - platform
        - locale

    Order:
      type: object
      properties:
        reference:
          type: string
          description: reference of the order in the integrator platform
          example: panamera_1
          minLength: 1
        description:
          type: string
          description: information about the order
          example: VAS for 7 days
          minLength: 1
        basket:
          type: array
          items:
            $ref: '#/components/schemas/BasketItem'
      required:
        - reference
        - description

    BasketItem:
      type: object
      properties:
        description:
          type: string
          description: Information about the item
          example: subscription for recurring VAS
        amount:
          type: number
          format: float
          description: Gross value of this item
          example: 400.10
          minimum: 0
          exclusiveMinimum: true
        category:
          type: string
          enum: [SUBSCRIPTION, NONE]
          default: NONE
      required:
        - description
        - amount

    PaymentMethod:
      type: object
      properties:
        version:
          description: Version of the response type
          type: string
          example: V2
          default: V2
        methodType:
          description: Method type
          type: string
          example: BANK_TRANSFER
          enum: [BANK_TRANSFER]
        context:
          type: object
          additionalProperties:
            type: string
        actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Action'
          example:
            {
              'select': {
                'type': 'REDIRECT',
                'httpMethod': 'GET',
                'uri': 'https://www.example.com'
              }
            }
        psp:
          type: string
          example: PAYU
          enum: [PAYU]

    ActionResponse:
      type: object
      properties:
        version:
          description: Version of the response type
          type: string
          default: V2
        status:
          description: The current payment status
          type: string
          enum: [CREATED, WAITING_CUSTOMER_ACTION, WAITING_PSP_ACTION, PENDING_EXECUTION, CAPTURED, REJECTED, ERROR]
          example: WAITING_CUSTOMER_ACTION
        message:
          description: User message
          type: string
          enum: [RETRY_METHOD, TRY_OTHER_METHOD, TRY_OTHER_CARD, RE_ENTER_CARD_DATA, ERROR, UNKNOWN]
        action:
          $ref: "#/components/schemas/Action"

    Action:
      type: object
      description: Instructions describing the HTTP call to be made by the FE
      properties:
        type:
          description: Type of the action.
          type: string
          enum: [API, REDIRECT, REDIRECT_FORM, POLL, EXECUTION]
        httpMethod:
          description: Http method that needs to be executed be the FE.
          type: string
          enum: [GET, POST]
        contentType:
          type: string
          nullable: true
        uri:
          description: Url where to redirect the user
          type: string
          example: "https://www.example.com"
        params:
          type: object
          additionalProperties:
            type: string
          nullable: true
        context:
          type: object
          additionalProperties:
            type: string
          nullable: true

    MethodResponse:
      type: object
      properties:
        version:
          description: Version of the response type
          type: string
          default: V2
        status:
          description: The current payment status
          type: string
          enum: [CREATED, WAITING_CUSTOMER_ACTION, WAITING_PSP_ACTION, PENDING_EXECUTION, CAPTURED, REJECTED, ERROR]
          example: CREATED
        action:
          $ref: "#/components/schemas/MethodAction"
        psp:
          description: ..
          type: string
          example: PAYU

    MethodAction:
      type: object
      description: Instructions describing the HTTP call to be made by the FE
      properties:
        type:
          description: Type of the action.
          type: string
          enum: [API_CALL, REDIRECT, POLL]
          example: REDIRECT
        httpMethod:
          description: Http method that needs to be executed be the FE.
          type: string
          enum: [GET, POST]
          example: GET
        contentType:
          type: string
          nullable: true
        uri:
          type: string
          example: "/example_co/ibt/?token=jwt&init=xxx&psp=PAYU&act=initialize"

    InitializeResponse:
      type: object
      properties:
        version:
          description: Version of the response type
          type: string
          default: V2
        status:
          description: The current payment status
          type: string
          enum: [CREATED, WAITING_CUSTOMER_ACTION, WAITING_PSP_ACTION, PENDING_EXECUTION, CAPTURED, REJECTED, ERROR]
        psp:
          description: The name of the PSP used
          type: string
          default: PAYU
        message:
          description: User message
          type: string
          nullable: true
          enum: [RETRY_METHOD, TRY_OTHER_METHOD, TRY_OTHER_CARD, RE_ENTER_CARD_DATA, ERROR, UNKNOWN]
        options:
          type: array
          items:
            $ref: '#/components/schemas/InitializeOption'
        context:
          $ref: '#/components/schemas/InitializeContext'

    InitializeContext:
      type: object
      description: Context to be used for the initialization
      properties:
        description:
          type: string
          description: Description about the item from the integrator
        grossValue:
          type: number
          description: Gross value of the object
          example: 13.40
        currency:
          type: string
          description: Currency identifier
          default: PLN
          example: PLN
        numberOfTopOptions:
          type: integer
          description: Number of top banks
          example: 8

    InitializeOption:
      type: object
      description: Instructions describing the HTTP call to be made by the FE
      properties:
        type:
          description: Type of the action.
          type: string
          default: API
          example: API
        httpMethod:
          description: Http method that needs to be executed be the FE.
          type: string
          default: POST
          example: POST
        contentType:
          type: string
          default: application/json
          example: application/json
        uri:
          description: Execution endpoint to be called for this option
          type: string
        params:
          type: object
          properties:
            issuerId:
              description: Vendor identifier
              type: string
              example: "blik"
        context:
          type: object
          properties:
            name:
              description: Name of the vendor
              type: string
              example: "BLIK"
            logoUrl:
              description: Url of the vendor logo
              type: string
              example: "https://static.payu.com/images/mobile/logos/pbl_blik.png"
            psp:
              description: PSP name for this vendor
              type: string
              default: PAYU
              example: PAYU

# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/examplegroup/example-payu-processor/0.1.0